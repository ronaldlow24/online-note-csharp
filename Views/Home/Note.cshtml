@model OnlineNote.Models.Note

@await Html.PartialAsync("~/Views/Shared/_Nav.cshtml")

<div class="container">
    <br />
    <input type="text" placeholder="Title" class="form-control" id="title" value="@Model.Title" />
    <br />
    <textarea type="text" placeholder="Content" class="form-control" id="content">@Model.Content</textarea>
    <br />
    <br />
    <br />

</div>


@section Scripts {
    <script>
        $('#content').trumbowyg({
            autogrow: true,
            btns: [
                ['undo', 'redo'], 
            ['formatting'],
            ['strong', 'em', 'del'],
            ['superscript', 'subscript'],
                ['link'], ['foreColor', 'backColor'], ['fontsize'],
            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],
            ['unorderedList', 'orderedList'],
            ['horizontalRule'],
            ['removeformat'],
            ['fullscreen']
        ]
        });

        let noteId = @Model.Id
        let noteContentRef = `@Model.Content`

        function debounce(callback, limit) {
            console.log(limit)
            let timeout;
            return () => {
                clearTimeout(timeout);
                timeout = setTimeout(() => {
                    callback();
                }, limit);
            };
        }

        async function saveNote() {
            try {
                const accountId = @ViewBag.AccountId
                const title = $("#title").val()
                const content = $("#content").val()

                if (content == noteContentRef)
                    return

                $("#float-loading").css('display', 'block');

                const data = { Id: noteId, Title: title, Content: content, AccountId: accountId }
                console.log(data)
                const response = await fetch('@Url.Action("PostNote", "Home")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                noteId = await response.text()
                noteContentRef = content

                $("#float-loading").css('display', 'none');
            }
            catch(ex) {
                console.error(ex)
                alert("ERROR")
            }
        }

        const debouncedKeyPress = debounce(saveNote, 300);


        $("#title").on("input", async function (event) {
            debouncedKeyPress()
        });

        $("#content").on("tbwchange", async function (event) {
            debouncedKeyPress()
        });

    </script>
}